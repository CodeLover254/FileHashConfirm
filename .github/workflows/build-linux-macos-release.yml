# This is a basic workflow to help you get started with Actions

name: CI Linux Application Builder

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

jobs:

  build-linux:
    # Runs on ubuntu
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout master branch
        uses: actions/checkout@v2

      # setup jdk
      - name: Setup JDK 11
        uses: actions/setup-java@v2.3.0
        with:
          java-version: 11
          distribution: jdk
      
      # cache dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v2.1.6
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # create the build
      - name: Build javafx maven project
        run: |
          cd Java/FileHashConfirm,
          mvn javafx:jlink --file pom.xml
      
      # upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: FileHashConfirm-Linux-Build
          path: Java/FileHashConfirm/target/FileHashConfirm.zip
  
  build-macos:
    # Runs on Mac Os
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout master branch
        uses: actions/checkout@v2

      # setup jdk
      - name: Setup JDK 11
        uses: actions/setup-java@v2.3.0
        with:
          java-version: 11
          distribution: jdk
      
      # cache dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v2.1.6
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # create the build
      - name: Build javafx maven project
        run: |
          cd Java/FileHashConfirm,
          mvn javafx:jlink --file pom.xml
      
      # upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: FileHashConfirm-MacOS-Build
          path: Java/FileHashConfirm/target/FileHashConfirm.zip
          
  create-java-release:
    name: Create java releases
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos]
    steps:
      - name: Download Linux Build
        uses: actions/download-artifact@v2.0.10
        with:
          name: FileHashConfirm-Linux-Build
      - name: Download MacOS Build
        uses: actions/download-artifact@v2.0.10
        with:
          name: FileHashConfirm-MacOS-Build
      - name: Create Github Release
        uses: elgohr/Github-Release-Action@master
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          
